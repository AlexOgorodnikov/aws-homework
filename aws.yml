---
- name: create aws instance
  hosts: localhost
  user: serveradmin

  tasks:
    - name: create key pair for instances
      ec2_key:
          name: ansinstances
          region: us-east-1
      register: ec2_key_result

    - name: Save private key
      copy: content="{{ ec2_key_result.key.private_key }}" dest=".ssh/id_rsa" mode=0400
      when: ec2_key_result.changed

    - name: start specific number of multiple instances
      amazon.aws.ec2_instance:
          key_name: "ansinstances"
          instance_type: t2.micro
          image_id: ami-08c40ec9ead489470
          count: 2
          region: us-east-1
          network:
            assign_public_ip: yes
            security_group: default
            vpc_subnet_id: subnet-0c3b88d08d2ebd335
          state: present
          tags:
            foo: instance
      register: ec2

    - name: add host builder
      add_host:
        name: "{{ ec2.instances[0].public.ip }}"
        groups: mvn
      with_items: "{{ ec2.instances }}"

    - name: add host prod
      add_host:
        name: "{{ ec2.instances[1].public.ip }}"
        groups: tom
      with_items: "{{ ec2.instances }}"

- name: Repo and cache servers update
  hosts: all
  remote_user: ubuntu
  become: yes
  become_user: root

  tasks:
  - name: repo and cahe update
    apt:
      update_cache: yes
      force_apt_get: yes
      cache_valid_time: 3600

- name: create app file ready to deploy
  hosts: mvn
  remote_user: ubuntu
  become: yes
  become_user: root

  tasks:
  - name: ensure git, jdk, maven packages is present
    apt:
      name: "{{item}}"
      state: present
    with_items:
      - git
      - default-jdk
      - maven

  - name: make directory for git pull and packages
    file:
      path: /home/app
      state: directory
  - name: clone code from git
    git:
      repo: 'https://github.com/boxfuse/boxfuse-sample-java-war-hello.git'
      dest: /home/app
  - name: make war file
    shell:
      chdir: /home/app
      cmd: mvn package
  - name: copy war to bucket
    community.aws.s3_sync:
      bucket: ansible-bucket-hw1
      file_root: /home/app/target/hello-1.0.war


- name: install tomcat
  hosts: tom
  remote_user: ubuntu
  become: yes
  become_user: root

  tasks:
  - name: ensure tomcat is present
    apt:
      name: tomcat9
      state: present

  - name: Deploy war file
    aws_s3:
      bucket: "ansible-bucket-hw1"
      object: "hello-1.0.war"
      dest: "/var/lib/tomcat9/webapps/hello-1.0.war"
      mode: get
      overwrite: yes